#! /bin/sh -x
#
# Singularity Wrapper for HEPHY
#
# - Trivial caching mechansim to avoid multiple pulls for batch jobs
# - Files on AFS are also cached
# - Binds of the most common directories
#
#
# Author:
#   Dietrich Liko <Dietrich.Liko@oeaw.ac.at>
#   Institute for High Energy Physics
#   Austrian Academy of Sciences

# singularity command and options


opts=''
while [ ${1:0:1} = "-" ]
do
   opts="$opts $1"
   shift
done

cmd=$1
shift

while [ ${1:0:1} = "-" ]
do
   opts="$opts $1 $2"
   shift 2
done

# determine cache dir

if [ ! -z $SINGULARITY_PULLDIR ]
then
  cache=$SINGULARITY_PULLDIR
elif [ ! -z $SINGULARITY_CACHEDIR ]
then
  cache=$SINGULARITY_CACHEDIR
else
  cache="/tmp/singularity/${USER}"
  mkdir -p $cache
  export SINGULARITY_PULLDIR=$cache
fi

echo
# image can be url or file

if [[ $1 =~ ://([^:]*)(:(.*)){0,1} ]]
then

  # image is an url

  name="${BASH_REMATCH[1]//\//-}-${BASH_REMATCH[3]:-latest}"

  img="${cache}/${name}.simg"
  (
    flock 200
    if [ -e $img ]
    then
      find $img -cmin +60 -delete
    fi

    if [ -e $img ]
    then
      echo "INFO: Found valid image ${name} in cache"
    else
      singularity pull -n ${name}.simg $1
    fi
   ) 200> ${img}.lock
   if [ $? -ne 0 ]
   then
     exit 1
   fi

else

  # image is a file
  path=$(readlink -m $1)
  if [ ${path:0:5} = "/afs/" ]
  then

    # image on afs

    name=$(basename $1)
    img="${cache}/${name}"
    (
      flock 200
      if [ $img -ot $path ]
      then
        cp $path $img
      else
        echo "INFO: Found valid image ${name} in cache"
      fi
    ) 200>${img}.lock

  else
    img=$1
  fi

fi

shift

# binds for stadard dirs

if [ $cmd != 'help' ] && [ $cmd != 'apps' ]
then
  for mnt in /afs /cvmfs /scratch
  do
   opts="$opts -B $mnt"
  done
fi

echo singularity $cmd $opts $img $*
singularity $cmd $opts $img $*
